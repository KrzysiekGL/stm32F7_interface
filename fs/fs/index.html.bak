<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="style.css">
    <script src="js/Chart.min.js"></script>
    <script>
      var xhr;
      var idTimer_Chart;
      var myChart;
      function onload(){
        xhr = new(XMLHttpRequest);
        var ctx = document.getElementById("myChart");
        var dataRecArray = new Uint16Array(512);
        myChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                 "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
            datasets: [{
              label: 'Temperature [st. C]',
              data: dataRecArray,
              backgroundColor: 'rgba(150, 150, 0, 0.0)',
              borderColor: 'rgba(150, 150, 0,1)',
              borderWidth: 2,
              pointStyle: 'line',
              pointRadius: 0
            }]
          },
          options: {
            tooltips: {
              enabled: false
            },
              animation: {
              duration: 0
            },
            responsive: true,
            scales: {
              xAxes: [{
                ticks:{
                    min: 0, max: 512, stepSize : 1,
                },
                stacked: true,
              gridLines: {
                  lineWidth: 0,
                  color: "rgba(255,255,255,0.0)"
                }
              }],
              yAxes: [{
                stacked: true,
                ticks: {
                  min: 0,
                  max: 100,
                  stepSize: 10,
                }
              }]
            }
          }
        });
      }
      function Timer_Chart(){
        xhr.open("GET", "content.bin?r=" + Math.random(), true);
        xhr.responseType = "arraybuffer";
        xhr.onload = function (oEvent) {
          var dataArray = new Uint16Array(this.response);
          myChart.data.datasets[0].data = dataArray;
          myChart.update();
        }
        xhr.send(null);
        idTimer_Chart = setTimeout("Timer_Chart()", 500);
      }
	  //-----------------------------------------------------
	  /* Odczytanie stanu wszystkich przekaźników */
	  function GetRelaysStates()
	  {
		nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						if(msg.indexOf('1O') != -1)
						{
							document.getElementById("controlRelayBtn1").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 1 ON"/>';
						}
						else
						{
							document.getElementById("controlRelayBtn1").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 1 OFF"/>';
						}
						
						if(msg.indexOf('2O') != -1)
						{
							document.getElementById("controlRelayBtn2").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 2 ON"/>';
						}
						else
						{
							document.getElementById("controlRelayBtn2").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 2 OFF"/>';
						}						
						
						if(msg.indexOf('3O') != -1)
						{
							document.getElementById("controlRelayBtn3").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 3 ON"/>';
						}
						else
						{
							document.getElementById("controlRelayBtn3").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 3 OFF"/>';
						}		

						if(msg.indexOf('4O') != -1)
						{
							document.getElementById("controlRelayBtn4").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 4 ON"/>';
						}
						else
						{
								document.getElementById("controlRelayBtn4").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 4 OFF"/>';
						}		

						if(msg.indexOf('5O') != -1)
						{
							document.getElementById("controlRelayBtn5").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 5 ON"/>';
						}
						else
						{
							document.getElementById("controlRelayBtn5").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 5 OFF"/>';
						}		
					}
				}
			}
		}
		request.open("GET", "relay.html?A" + nocache, true);
		request.send(null);
	  }
	  //-----------------------------------------------------
	  /* Sterowanie przekaźnikami */
	  function GetRelayState(val){
		nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						if(val == 1)
						{
							if(msg.includes("relay.html?r=1_On") == true)
							{
								document.getElementById("controlRelayBtn1").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 1 ON"/>';
							}
							else
							{
								document.getElementById("controlRelayBtn1").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 1 OFF"/>';
							}
						}
						else if(val == 2)
						{
							if(msg.includes("relay.html?r=2_On") == true)
							{
								document.getElementById("controlRelayBtn2").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 2 ON"/>';
							}
							else
							{
								document.getElementById("controlRelayBtn2").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 2 OFF"/>';
							}						
						}
						else if(val == 3)
						{
							if(msg.includes("relay.html?r=3_On") == true)
							{
								document.getElementById("controlRelayBtn3").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 3 ON"/>';
							}
							else
							{
								document.getElementById("controlRelayBtn3").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 3 OFF"/>';
							}		
						}
						else if(val == 4)
						{
							if(msg.includes("relay.html?r=4_On") == true)
							{
								document.getElementById("controlRelayBtn4").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 4 ON"/>';
							}
							else
							{
								document.getElementById("controlRelayBtn4").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 4 OFF"/>';
							}		
						}
						else if(val == 5)
						{
							if(msg.includes("relay.html?r=5_On") == true)
							{
								document.getElementById("controlRelayBtn5").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #000000; background-color: #00ff00;" onclick="GetRelayState()" value="Przekaźnik 5 ON"/>';
							}
							else
							{
								document.getElementById("controlRelayBtn5").innerHTML = '<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState()" value="Przekaźnik 5 OFF"/>';
							}		
						}
					}
				}
			}
		}
		
		if(val == 1)
		{
			request.open("GET", "relay.html?r=1" + nocache, true);
			request.send(null);
		}
		else if(val == 2)
		{
			request.open("GET", "relay.html?r=2" + nocache, true);
			request.send(null);
		}
		else if(val == 3)
		{
			request.open("GET", "relay.html?r=3" + nocache, true);
			request.send(null);
		}
		else if(val == 4)
		{
			request.open("GET", "relay.html?r=4" + nocache, true);
			request.send(null);
		}
		else if(val == 5)
		{
			request.open("GET", "relay.html?r=5" + nocache, true);
			request.send(null);
		}
	  }
	 
	  //-----------------------------------------------------
	  /* Przesłanie danych do wyświetlenia na ekranie */
	  function sendDataToDisplay(){
	    xhr.open("GET", "distxt.html?d=" +  document.getElementById("myText").value + '@', true);
        xhr.responseType = "text";
        xhr.send(null);
	  }
	  //-----------------------------------------------------
	  /* Zmiana koloru tła na wyświetlaczu */
      function tftred(){
        xhr.open("GET", "color.html?c=1", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftgreen(){
        xhr.open("GET", "color.html?c=2", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftblue(){
        xhr.open("GET", "color.html?c=3", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftblack(){
        xhr.open("GET", "color.html?c=4", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftcyan(){
        xhr.open("GET", "color.html?c=5", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftmagenta(){
        xhr.open("GET", "color.html?c=6", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftyellow(){
        xhr.open("GET", "color.html?c=7", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
      function tftwhite(){
        xhr.open("GET", "color.html?c=8", true);
        xhr.responseType = "text";
        xhr.send(null);
      }
	  //-----------------------------------------------------
      function startchart(){
        document.getElementById('butchart').innerHTML = '&nbsp;&nbsp;&nbsp;&nbsp;<input class = "butcharstyledef" type="button" style="color: #000000; background-color: #666666;" onclick="stopchart()" value="Przerwij pomiar temperatury"/>';
        Timer_Chart();
      }
      function stopchart(){
        document.getElementById('butchart').innerHTML = '&nbsp;&nbsp;&nbsp;&nbsp;<input class = "butcharstyledef" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="startchart()" value="Rozpocznij pomiar temperatury"/>';
        clearTimeout(idTimer_Chart);
      }
	  //-----------------------------------------------------
	  /* Odczyt parametrów z czujników */
	  function loadAllDataFromDevice(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(21, 37);
						document.getElementById("readedTimeLbl").innerHTML = "Czas: " + msgToDisplay;
						msgToDisplay = msg.substring(38, 42);
						document.getElementById("readedTempLbl").innerHTML = "Temperatura: " + msgToDisplay;
						msgToDisplay = msg.substring(44, 46);
						document.getElementById("readedHumidLbl").innerHTML = "Wilgotność: " + msgToDisplay + "%";
						msgToDisplay = msg.substring(47, 53);
						document.getElementById("readedPressureLbl").innerHTML = "Ciśnienie: " + msgToDisplay + "hPa";
						msgToDisplay = msg.substring(54, 59);
						document.getElementById("readedAltitudeLbl").innerHTML = "Wysokość: " + msgToDisplay + "mnpm";
					}
				}
			}
		}
		request.open("GET", "alldata.html?AD=" + nocache, true);
		request.send(null);
	  }
	  function loadTimeFromDevice(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(17, 33);
						document.getElementById("readedTimeLbl").innerHTML = "Czas: " + msgToDisplay;
					}
				}
			}
		}
		request.open("GET", "time.html?T=" + nocache, true);
		request.send(null);
	  }
	  function loadTempFromDevice(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(17, 21);
						document.getElementById("readedTempLbl").innerHTML = "Temperatura: " + msgToDisplay;
					}
				}
			}
		}
		request.open("GET", "temp.html?T=" + nocache, true);
		request.send(null);
	  }
	  function loadHumidityFromDevice(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(18, 20);
						document.getElementById("readedHumidLbl").innerHTML = "Wilgotność: " + msgToDisplay + "%";
					}
				}
			}
		}
		request.open("GET", "humid.html?H=" + nocache, true);
		request.send(null);
	  }
	  function loadPressureFromDevice(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(21, 27);
						document.getElementById("readedPressureLbl").innerHTML = "Ciśnienie: " + msgToDisplay + "hPa";
					}
				}
			}
		}
		request.open("GET", "press.html?P=" + nocache, true);
		request.send(null);
	  }
	  function loadAltiduteFromDev(){
	  	nocache = "&nocache=" + Math.random() * 1000000;
		var request = new XMLHttpRequest();
		request.onreadystatechange = function(){
			if(this.readyState == 4){
				if(this.status == 200){
					if(this.responseText != null){
						var msg = this.responseText;
						var msgToDisplay = msg.substring(21, 26);
						document.getElementById("readedAltitudeLbl").innerHTML = "Wysokość: " + msgToDisplay + "mnpm";
					}
				}
			}
		}
		request.open("GET", "altit.html?A=" + nocache, true);
		request.send(null);
	  }
	  //-----------------------------------------------------
    </script>
  </head>
  <body  onload="onload()">
  <div id="page">
    <div id="header">
      <h1 style="text-align: center; color: #fff;">STM32F746G</h1>
      <p></p>
      <p></p>
      <h2 style="text-align: center; color: #fff;">PRZYKŁAD UKŁAD STEROWANIA</h2>
    </div>
    <div id="content">
      <div id="article">
        <p></p>
        <p style="text-align: center;">
          <img src="IMG/stm32_front.jpg">
        </p>
        <p></p>
		<br><br>
		Wpisz tekst do wyświetlenia:&nbsp;&nbsp;&nbsp;&nbsp;
		<br><br>
		<div id="sendDataTxtBox">
		<input type="text" id="myText" size="30">
		</div>
		<br><br>
		<div id="butSendDataToDisplayBtn">
			<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="sendDataToDisplay()" value="Wyświetl text:"/>
			<br><br>
		</div>
        <p></p>
        <canvas id="myChart" width="700" height="400"></canvas>
        <p></p>
        <div id="butchart">
          &nbsp;&nbsp;&nbsp;&nbsp;<input class = "butcharstyledef" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="startchart()" value="Rozpocznij pomiar temperatury"/>
        </div>
		<p></p>
		<ul>
			<br><b>Pobranie danych z układu:</b><br>
        </ul>
		<div class = "butleft">
			<div id="butReadAllParamFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadAllDataFromDevice()" value="Odczytaj parametry:"/>
				<br><br>
			</div>
			<div id="butReadTimeFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadTimeFromDevice()" value="Odczytaj czas:"/>
				<br><br>
			</div>
			<div id="readedTimeLbl">
				&nbsp;&nbsp;&nbsp;&nbsp;<label>Time</label>
				<br><br>
			</div>
			<div id="butReadTempFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadTempFromDevice()" value="Odczytaj temperaturę:"/>
				<br><br>
			</div>
				<div id="readedTempLbl">
				&nbsp;&nbsp;&nbsp;&nbsp;<label>Temp</label>
				<br><br>
				</div>
			<div id="butReadHumidityFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadHumidityFromDevice()" value="Odczytaj wilgotność:"/>
				<br><br>
			</div>
				<div id="readedHumidLbl">
				&nbsp;&nbsp;&nbsp;&nbsp;<label>Humid</label>
				<br><br>
				</div>
			<div id="butReadPressureFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadPressureFromDevice()" value="Odczytaj ciśnienie:"/>
				<br><br>
			</div>
				<div id="readedPressureLbl">
				&nbsp;&nbsp;&nbsp;&nbsp;<label>Press</label>
				<br><br>
				</div>
			<div id="butReadAltiduteFromDev">
				<input class = "butReadData" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="loadAltiduteFromDev()" value="Odczytaj położenie:"/>
				<br><br>
			</div>
			<div id="readedAltitudeLbl">
			&nbsp;&nbsp;&nbsp;&nbsp;<label>Altitude</label>
			<br><br>
			</div>
		</div>
        <p></p>
        <p style="text-align: center;">
          <img src="IMG/stm32_back.jpg">
        </p>
        <p></p>
      </div>
      <div id="sidebar">
        <ul>
			<br><b>Ustaw kolor tła:</b><br>
        </ul>
        <div class = "butcenter">
          <input class = "butcolor" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="tftred()" value="Czerwony"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #ff00ff; background-color: #00ff00;" onclick="tftgreen()" value="Zielony"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #ffff00; background-color: #0000ff;" onclick="tftblue()" value="Niebieski"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #ffffff; background-color: #000000;" onclick="tftblack()" value="Czarny"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #ff0000; background-color: #00ffff;" onclick="tftcyan()" value="Cyjan"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #00ff00; background-color: #ff00ff;" onclick="tftmagenta()" value="Magenta"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #0000ff; background-color: #ffff00;" onclick="tftyellow()" value="Żółty"/>
          <br><br>
          <input class = "butcolor" type="button" style="color: #000000; background-color: #ffffff;" onclick="tftwhite()" value="Biały"/>
        </div>
		<ul>
			<br><b>Ustaw przekaźnik:</b><br>
        </ul>
		<div class = "butcenter">
			<div id="controlRelayCheckBtn">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelaysStates()" value="Odczytaj przekaźniki"/>
			</div>
			<br><br>
			<div id="controlRelayBtn1">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState(1)" value="Uruchom przekaźnik 1"/>
			</div>
			<br><br>
			<div id="controlRelayBtn2">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState(2)" value="Uruchom przekaźnik 2"/>
			</div>
			<br><br>
			<div id="controlRelayBtn3">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState(3)" value="Uruchom przekaźnik 3"/>
			</div>
			<br><br>
			<div id="controlRelayBtn4">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState(4)" value="Uruchom przekaźnik 4"/>
			</div>
			<br><br>
			<div id="controlRelayBtn5">
			<input class = "controlRelayBtn" type="button" style="color: #00ffff; background-color: #ff0000;" onclick="GetRelayState(5)" value="Uruchom przekaźnik 5"/>
			</div>
			<br><br>
		</div>
      </div>
    </div>
  </div>
  </body>
</html>